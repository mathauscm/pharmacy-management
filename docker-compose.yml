version: '3.8'

services:
  # Backend Node.js
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: myfarm-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=pharmacy_db
      - DB_USER=postgres
      - DB_PASSWORD=pharmacy_password
      - CORS_ORIGIN=http://localhost:5173
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=http://localhost:3000/api/auth/google/callback
      - FRONTEND_URL=http://localhost:5173
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=sua_chave_nextauth_secreta
      - JWT_SECRET=sua_chave_secreta_muito_segura
      - JWT_EXPIRES_IN=24h
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - myfarm-network

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: myfarm-frontend
    ports:
      - "5173:80"
    environment:
      - VITE_API_URL=http://localhost:3000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - myfarm-network

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: myfarm-postgres
    environment:
      POSTGRES_DB: pharmacy_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pharmacy_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: unless-stopped
    networks:
      - myfarm-network

  # Adminer para administração do banco (opcional)
  adminer:
    image: adminer:latest
    container_name: myfarm-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - myfarm-network

volumes:
  postgres_data:
    driver: local

networks:
  myfarm-network:
    driver: bridge